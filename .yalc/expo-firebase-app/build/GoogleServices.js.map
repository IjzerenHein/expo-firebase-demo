{"version":3,"file":"GoogleServices.js","sourceRoot":"","sources":["../src/GoogleServices.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,SAAS,MAAM,gBAAgB,CAAC;AAGvC,MAAM,UAAU,+CAA+C,CAC7D,kBAAuB;IAEvB,uBAAuB;IACvB,MAAM,WAAW,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;IACvD,MAAM,MAAM,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,MAAM,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC;IACzC,MAAM,iBAAiB,GAAG,WAAW,CAAC,cAAc,CAAC;IACrD,MAAM,WAAW,GAAG,WAAW,CAAC,YAAY,CAAC;IAC7C,MAAM,aAAa,GAAG,WAAW,CAAC,cAAc,CAAC;IACjD,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC;IAClD,MAAM,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9D,MAAM,UAAU,GAAG,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;IAClG,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;IAC7C,MAAM,UAAU,GAAG,GAAG,SAAS,kBAAkB,CAAC;IAClD,OAAO;QACL,KAAK;QACL,UAAU;QACV,MAAM;QACN,UAAU;QACV,SAAS;QACT,iBAAiB;QACjB,WAAW;QACX,aAAa;KACd,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,qCAAqC;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,SAAS,CAAC;IAC/B,IAAI,CAAC,QAAQ;QAAE,MAAM,IAAI,UAAU,CAAC,cAAc,EAAE,wBAAwB,CAAC,CAAC;IAC9E,MAAM,EAAE,kBAAkB,EAAE,GAAG,QAAQ,CAAC;IACxC,IAAI,CAAC,kBAAkB;QACrB,MAAM,IAAI,UAAU,CAAC,cAAc,EAAE,kDAAkD,CAAC,CAAC;IAC3F,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAC5C,OAAO,+CAA+C,CAAC,IAAI,CAAC,CAAC;AAC/D,CAAC;AAED,MAAM,UAAU,8BAA8B;IAC5C,OAAO,qCAAqC,EAAE,CAAC;AACjD,CAAC","sourcesContent":["import { CodedError } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport { FirebaseOptions } from './FirebaseApp.types';\n\nexport function getFirebaseOptionsFromAndroidGoogleServicesFile(\n  googleServicesJson: any\n): FirebaseOptions {\n  // TODO make this solid\n  const projectInfo = googleServicesJson['project_info'];\n  const client = googleServicesJson.client[0];\n  const projectId = projectInfo.project_id;\n  const messagingSenderId = projectInfo.project_number;\n  const databaseURL = projectInfo.firebase_url;\n  const storageBucket = projectInfo.storage_bucket;\n  const appId = client.client_info.mobilesdk_app_id;\n  const analyticsService = client.services['analytics-service'];\n  const trackingId = analyticsService ? analyticsService.analytics_property.tracking_id : undefined;\n  const apiKey = client.api_key[0].current_key;\n  const authDomain = `${projectId}.firebaseapp.com`;\n  return {\n    appId,\n    trackingId,\n    apiKey,\n    authDomain,\n    projectId,\n    messagingSenderId,\n    databaseURL,\n    storageBucket,\n  };\n}\n\nexport function getFirebaseOptionsFromAndroidManifest(): FirebaseOptions {\n  const { manifest } = Constants;\n  if (!manifest) throw new CodedError('ERR_MANIFEST', 'Manifest not available');\n  const { googleServicesFile } = manifest;\n  if (!googleServicesFile)\n    throw new CodedError('ERR_MANIFEST', 'GoogleServicesFile is not configured in app.json');\n  const json = JSON.parse(googleServicesFile);\n  return getFirebaseOptionsFromAndroidGoogleServicesFile(json);\n}\n\nexport function getFirebaseOptionsFromManifest(): FirebaseOptions {\n  return getFirebaseOptionsFromAndroidManifest();\n}\n"]}