{"version":3,"file":"FirebaseModules.js","sourceRoot":"","sources":["../src/FirebaseModules.ts"],"names":[],"mappings":"AAEA,MAAM,YAAY,GAAQ,EAAE,CAAC;AAC7B,MAAM,oBAAoB,GAAQ,EAAE,CAAC;AACrC,MAAM,kBAAkB,GAAQ,EAAE,CAAC;AASnC;;;;;;;;;EASE;AAEF,uEAAuE;AACvE,MAAM,CAAC,IAAI,IAAU,CAAC;AACtB;;;;;;mEAMmE;AAEnE,MAAM,UAAU,SAAS,CAAC,IAAwB;IAChD,QAAQ,IAAI,EAAE;QACZ;;kBAEU;QACV,KAAK,MAAM;YACT,OAAO,IAAI,CAAC;QACd;;;;;;;;;;;;;;;;;;;;kBAoBU;KACX;AACH,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,IAAwB,EAAE,GAAmB;IACrE,QAAQ,IAAI,EAAE;QACZ;;kBAEU;QACV,KAAK,MAAM;YACT,IAAI,GAAG,GAAG,CAAC;YACX,MAAM;QACR;;;;;;;;;;;;;;;;;;;;kBAoBU;KACX;AACH,CAAC","sourcesContent":["import { FirebaseModuleName, FirebaseModule } from './FirebaseApp.types';\n\nconst FirebaseAuth: any = '';\nconst FacebookAuthProvider: any = '';\nconst GoogleAuthProvider: any = '';\n\nexport type Auth = {\n  (app?: any): Auth;\n  Auth: typeof FirebaseAuth;\n  FacebookAuthProvider: typeof FacebookAuthProvider;\n  GoogleAuthProvider: typeof GoogleAuthProvider;\n};\n\n/*export { FirebaseAnalytics } from '@firebase/analytics-types';\nexport { FirebaseAuth, FacebookAuthProvider, GoogleAuthProvider } from '@firebase/auth-types';\nexport { FirebaseDatabase } from '@firebase/database-types';\nexport { FirebaseFirestore } from '@firebase/firestore-types';\nexport { FirebaseFunctions } from '@firebase/functions-types';\nexport { FirebaseMessaging } from '@firebase/messaging-types';\nexport { FirebasePerformance } from '@firebase/performance-types';\nexport { RemoteConfig as FirebaseRemoteConfig } from '@firebase/remote-config-types';\nexport { FirebaseStorage } from '@firebase/storage-types';\n*/\n\n//export let analytics: (app?: any) => FirebaseTypes.FirebaseAnalytics;\nexport let auth: Auth;\n/*export let database: (app?: any) => FirebaseTypes.FirebaseDatabase;\nexport let firestore: (app?: any) => FirebaseTypes.FirebaseFirestore;\nexport let functions: (app?: any) => FirebaseTypes.FirebaseFunctions;\nexport let messaging: (app?: any) => FirebaseTypes.FirebaseMessaging;\nexport let performance: (app?: any) => FirebaseTypes.FirebasePerformance;\nexport let remoteConfig: (app?: any) => FirebaseTypes.FirebaseRemoteConfig;\nexport let storage: (app?: any) => FirebaseTypes.FirebaseStorage;*/\n\nexport function getModule(name: FirebaseModuleName): FirebaseModule | void {\n  switch (name) {\n    /*case 'analytics':\n      analytics = func;\n      break;*/\n    case 'auth':\n      return auth;\n    /*case 'database':\n      database = func;\n      break;\n    case 'firestore':\n      firestore = func;\n      break;\n    case 'functions':\n      functions = func;\n      break;\n    case 'messaging':\n      messaging = func;\n      break;\n    case 'performance':\n      performance = func;\n      break;\n    case 'remoteConfig':\n      remoteConfig = func;\n      break;\n    case 'storage':\n      storage = func;\n      break;*/\n  }\n}\n\nexport function setModule(name: FirebaseModuleName, mod: FirebaseModule) {\n  switch (name) {\n    /*case 'analytics':\n      analytics = func;\n      break;*/\n    case 'auth':\n      auth = mod;\n      break;\n    /*case 'database':\n      database = func;\n      break;\n    case 'firestore':\n      firestore = func;\n      break;\n    case 'functions':\n      functions = func;\n      break;\n    case 'messaging':\n      messaging = func;\n      break;\n    case 'performance':\n      performance = func;\n      break;\n    case 'remoteConfig':\n      remoteConfig = func;\n      break;\n    case 'storage':\n      storage = func;\n      break;*/\n  }\n}\n"]}